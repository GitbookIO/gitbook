/* Detect whether a scrollbar exists on the table */
@keyframes detect-scroll {
    from,
    to {
        --can-scroll: ;
    }
}

/* Apply styles to the Table if scrollbar exists */
.tableWrapper {
    animation: detect-scroll linear;
    animation-timeline: scroll(self x);

    --border-radius-if-can-scroll: var(--can-scroll) 0.375rem;
    --border-radius-if-cant-scroll: 0;
    border-radius: var(--border-radius-if-can-scroll, var(--border-radius-if-cant-scroll));

    --border-width-if-can-scroll: var(--can-scroll) 1px;
    --border-width-if-cant-scroll: 0;
    border-width: var(--border-width-if-can-scroll, var(--border-width-if-cant-scroll));

    @apply border-dark/3;
}

:global(.dark) .tableWrapper {
    @apply border-light/2;
}

/* Styles for circular scroll progress animation on scrollable tables */

/* Hide it on browsers (firefox / safari) that do not support it */
.progressOpacitySharp {
    display: none;
}

@supports (animation-timeline: scroll()) {
    .progressContainer {
        scroll-timeline-name: --squareTimeline;
        scroll-timeline-axis: x;
    }

    .progressOpacity {
        animation-name: opacityProgress;
        animation-duration: 1ms;
        animation-direction: alternate;
        animation-timeline: --squareTimeline;
        animation-timing-function: linear;
    }

    .progressOpacitySharp {
        display: grid;
        opacity: 0;
        animation-name: opacityProgressSharp;
        animation-duration: 1ms;
        animation-direction: alternate;
        animation-timeline: --squareTimeline;
        animation-timing-function: linear;
    }

    .strokeOpacityProgressInverted {
        animation-name: strokeOpacityProgressInverted;
        animation-duration: 1ms;
        animation-direction: alternate;
        animation-timeline: --squareTimeline;
        animation-timing-function: linear;
    }

    .progressSvg {
        animation-name: svgProgress;
        animation-duration: 1ms;
        animation-direction: alternate;
        animation-timeline: --squareTimeline;
        animation-timing-function: linear;
    }

    @keyframes opacityProgress {
        0%,
        50% {
            opacity: 1;
        }
        100% {
            opacity: 0;
        }
    }

    @keyframes opacityProgressSharp {
        0%,
        98% {
            opacity: 1;
        }
        100% {
            opacity: 0;
        }
    }

    @keyframes strokeOpacityProgressInverted {
        0%,
        10% {
            stroke-opacity: 0;
        }
        30% {
            stroke-opacity: 0.88;
        }
        100% {
            stroke-opacity: 0.88;
        }
    }

    @keyframes svgProgress {
        from {
            stroke-dasharray: 0 100;
        }
        to {
            stroke-dasharray: 100 100;
        }
    }
}
