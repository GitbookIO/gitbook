@import "tailwindcss";

@config '../../../tailwind.config.ts';

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentcolor);
    }
}

@utility no-scrollbar {
    &::-webkit-scrollbar {
        display: none;
    }
    scrollbar-width: none;
    -ms-overflow-style: none;
}

@utility hide-scrollbar {
    /* Hide scrollbar by default */
    scrollbar-color: transparent transparent;
    transition: scrollbar-color 0.2s ease-in-out;

    &:hover {
        /* Show scrollbar on hover */
        scrollbar-color: unset;
    }

    @media (prefers-contrast: more) {
        /* Always show scrollbar in high contrast mode */
        scrollbar-color: unset;
    }
}

@utility linear-mask-gradient {
    mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1) 96px, rgba(0, 0, 0, 0));
    mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1) 96px, rgba(0, 0, 0, 0));
}

@utility linear-mask-util {
    mask-image: linear-gradient(to bottom, white, white);
    mask-image: linear-gradient(to bottom, white, white);
}

@utility grid-area-1-1 {
    grid-area: 1 / 1;
    grid-area: 1 / 1;
}

@utility gutter-stable {
    scrollbar-gutter: stable;
}

@utility triangle {
    position: relative;
    background-color: orange;
    text-align: left;
    transform: rotate(-60deg) skewX(-30deg) scale(1, 0.866);
    &:before {
        content: "";
        position: absolute;
        background-color: inherit;
    }
    &:after {
        content: "";
        position: absolute;
        background-color: inherit;
    }
    width: inherit;
    height: inherit;
    border-top-right-radius: 30%;
    &:before {
        width: inherit;
        height: inherit;
        border-top-right-radius: 30%;
    }
    &:after {
        width: inherit;
        height: inherit;
        border-top-right-radius: 30%;
    }

    &:before {
        transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707) translate(0, -50%);
    }
    &:after {
        transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);
    }
    position: relative;
    background-color: orange;
    text-align: left;
    transform: rotate(-60deg) skewX(-30deg) scale(1, 0.866);
    &:before {
        content: "";
        position: absolute;
        background-color: inherit;
    }
    &:after {
        content: "";
        position: absolute;
        background-color: inherit;
    }
    width: inherit;
    height: inherit;
    border-top-right-radius: 30%;
    &:before {
        width: inherit;
        height: inherit;
        border-top-right-radius: 30%;
    }
    &:after {
        width: inherit;
        height: inherit;
        border-top-right-radius: 30%;
    }

    &:before {
        transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707) translate(0, -50%);
    }
    &:after {
        transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);
    }
}

@utility break-anywhere {
    word-break: break-word;
    @supports (overflow-wrap: anywhere) {
        word-break: break-word;
        overflow-wrap: anywhere;
    }
    word-break: break-word;
    @supports (overflow-wrap: anywhere) {
        word-break: break-word;
        overflow-wrap: anywhere;
    }
}

@utility bg-gradient-primary {
    @apply bg-linear-to-bl from-primary-4 to-tint-base to-60% bg-fixed;
    @apply bg-linear-to-bl from-primary-4 to-tint-base to-60% bg-fixed;
}

@utility bg-gradient-tint {
    @apply bg-linear-to-bl from-tint-4 to-tint-base to-60% bg-fixed;
    @apply bg-linear-to-bl from-tint-4 to-tint-base to-60% bg-fixed;
}

@utility site-background {
    @apply [html.sidebar-filled.theme-bold.tint_&]:bg-tint-subtle;
    @apply bg-tint-base;
    @apply theme-muted:bg-tint-subtle;

    @apply theme-gradient:bg-gradient-primary;
    @apply theme-gradient-tint:bg-gradient-tint;
}

@utility elevate-link {
    & a[href]:not(.link-overlay) {
        position: relative;
        z-index: 20;
    }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentcolor);
    }
}

@layer base {
    :root {
        @apply leading-relaxed;
        interpolate-size: allow-keywords; /* Opt-in for modern browsers to interpolate "auto" values in transitions/animations. */
    }
    
    /* Modern browsers with `scrollbar-*` support */
    @supports (scrollbar-color: auto) {
        * {
            scrollbar-color: theme("colors.tint.7") transparent;
            scrollbar-width: thin;
        }

        @media (prefers-contrast: more) {
            * {
                scrollbar-color: theme("colors.tint.11") transparent;
                scrollbar-width: auto;
            }
        }
    }
    
    /* Otherwise, use `::-webkit-scrollbar-*` pseudo-elements */
    @supports selector(::-webkit-scrollbar) {
        ::-webkit-scrollbar {
            background: transparent;
            max-width: 8px;
            max-height: 6px;
        }

        ::-webkit-scrollbar-thumb {
            background: theme("colors.tint.7");
            border-radius: 8px;
            transition: background 0.2s ease-in-out;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: theme("colors.tint.8");
        }

        @media (prefers-contrast: more) {
            ::-webkit-scrollbar-thumb {
                background: theme("colors.tint.11");
            }

            ::-webkit-scrollbar-thumb:hover {
                background: theme("colors.tint.12");
            }
        }
    }


    body {
        @apply text-tint-strong antialiased;
    }
    html {
        scrollbar-width: auto;
    }
    h1 {
        @apply tracking-[-0.025em] text-tint-strong text-balance;
    }
    h2,
    h3,
    h4,
    h5,
    h6 {
        @apply tracking-[-0.0125em] text-tint-strong;
    }

    a,
    button,
    input,
    textarea {
        @apply focus-visible:outline-2 focus-visible:outline-primary;
    }

    button:not(:disabled),
    [role="button"]:not(:disabled) {
        cursor: pointer;
    }

    code,
    pre {
        /* Don't apply antialiased to `code` and `pre` elements */
        @apply subpixel-antialiased;
    }

    .flip-heading-hash {
        @apply [h1,h2,h3,h4]:content-start;
        @apply [h1,h2,h3,h4]:auto-cols-[auto_1fr];
        @apply [&:is(h1,h2,h3,h4)>div:first-child]:[grid-area:1/2];
        @apply [&:is(h1,h2,h3,h4)>div:first-child]:ml-1;
    }
}

html {
    color-scheme: light;

    /** Ensure PDF export and print correctly displays the background colors */
    print-color-adjust: exact;
    -webkit-print-color-adjust: exact;
}
html.dark {
    color-scheme: dark light;
}

html.announcement-hidden #announcement-banner {
    @apply hidden;
}

/* Shiki theme */
:root {
    --shiki-color-text: rgb(var(--tint-11));
    --shiki-token-punctuation: rgb(var(--tint-11));
    --shiki-token-comment: rgb(var(--neutral-9));
    --shiki-token-link: rgb(var(--primary-10));

    --shiki-token-constant: rgb(var(--warning-10));
    --shiki-token-string: rgb(var(--warning-10));
    --shiki-token-string-expression: rgb(var(--success-10));
    --shiki-token-keyword: rgb(var(--danger-10));
    --shiki-token-parameter: rgb(var(--warning-10));
    --shiki-token-function: rgb(var(--primary-10));

    --shiki-token-inserted: rgb(var(--success-10));
    --shiki-token-deleted: rgb(var(--danger-10));
    --shiki-token-changed: rgb(var(--tint-12));
}

@media (prefers-contrast: more) {
    :root {
        --shiki-color-text: rgb(var(--tint-12));
        --shiki-token-punctuation: rgb(var(--tint-12));
        --shiki-token-comment: rgb(var(--neutral-11));
        --shiki-token-link: rgb(var(--primary-11));

        --shiki-token-constant: rgb(var(--warning-11));
        --shiki-token-string: rgb(var(--warning-11));
        --shiki-token-string-expression: rgb(var(--success-11));
        --shiki-token-keyword: rgb(var(--danger-11));
        --shiki-token-parameter: rgb(var(--warning-11));
        --shiki-token-function: rgb(var(--primary-11));

        --shiki-token-inserted: rgb(var(--success-11));
        --shiki-token-deleted: rgb(var(--danger-11));
        --shiki-token-changed: rgb(var(--tint-12));
    }
}

html.dark {
    /* Override select colors to have more contrast */
    --shiki-token-comment: rgb(var(--neutral-9));

    --shiki-token-constant: rgb(var(--warning-11));
    --shiki-token-string: rgb(var(--warning-11));
    --shiki-token-string-expression: rgb(var(--success-11));
    --shiki-token-keyword: rgb(var(--danger-11));
    --shiki-token-parameter: rgb(var(--warning-11));
    --shiki-token-function: rgb(var(--primary-11));
}

.code-monochrome {
    --shiki-token-constant: rgb(var(--tint-11));
    --shiki-token-string: rgb(var(--tint-12));
    --shiki-token-string-expression: rgb(var(--tint-12));
    --shiki-token-keyword: rgb(var(--primary-10));
    --shiki-token-parameter: rgb(var(--tint-9));
    --shiki-token-function: rgb(var(--primary-9));
}

html.dark.code-monochrome {
    --shiki-token-constant: rgb(var(--tint-11));
    --shiki-token-string: rgb(var(--tint-12));
    --shiki-token-string-expression: rgb(var(--tint-12));
    --shiki-token-keyword: rgb(var(--primary-11));
    --shiki-token-parameter: rgb(var(--tint-10));
    --shiki-token-function: rgb(var(--primary-10));
}

html.font-Lato {
    /* Lato's default ligatures impact readability, so we turn them off */
    font-variant-ligatures: no-common-ligatures;
}

/* Code blocks */
.highlight-line {
    @apply grid grid-cols-subgrid col-span-2 relative ring-1 ring-transparent hover:ring-tint-hover hover:z-1 rounded-sm;
    @apply only:hover:ring-transparent;
    @apply [counter-increment:line];

    &.highlighted {
        @apply bg-tint-active;
        @apply first:rounded-t-md first:*:mt-1;
        @apply last:rounded-b-md last:*:mb-1;
        @apply rounded-none;
    }

    &:not(.highlighted) + .highlighted {
        @apply rounded-t-md *:mt-1;
    }

    &.highlighted:has(+ :not(.highlighted)) {
        @apply rounded-b-md *:mb-1;
    }

    &:not(.highlighted) + .highlighted:has(+ :not(.highlighted)) {
        @apply rounded-md;
    }
}

.highlight-line-number {
    @apply text-sm text-right pr-3.5 rounded-l pl-2 sticky left-[-3px] bg-linear-to-r from-80% from-tint-subtle contrast-more:from-tint-base theme-muted:from-tint-base [html.theme-bold.sidebar-filled_&]:from-tint-base to-transparent;
    @apply before:text-tint before:content-[counter(line)];

    .highlight-line.highlighted > & {
        @apply before:text-tint bg-linear-to-r from-80% from-tint-active to-transparent;
    }
}

.highlight-line-content {
    @apply ml-3 block text-sm;
}
