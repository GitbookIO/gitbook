@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    :root {
        --scrollbar-width: calc(100vw - 100%);
        @apply leading-relaxed;
    }
    body {
        @apply text-tint-strong antialiased;
    }
    html {
        @apply gutter-stable;
    }
    h1 {
        @apply tracking-[-0.025em] text-tint-strong text-balance;
    }
    h2,
    h3,
    h4,
    h5,
    h6 {
        @apply tracking-[-0.0125em] text-tint-strong;
    }

    a,
    button,
    input,
    textarea {
        @apply outline-2 outline-primary;
    }

    code,
    pre {
        /* Don't apply antialiased to `code` and `pre` elements */
        @apply subpixel-antialiased;
    }

    /*  Light mode */
    ::-webkit-scrollbar {
        @apply bg-tint-subtle;
        width: 8px;
        height: 8px;
    }

    ::-webkit-scrollbar-thumb {
        @apply bg-tint-7;
        border-radius: 8px;
    }

    ::-webkit-scrollbar-thumb:hover {
        @apply bg-tint-8;
    }

    .flip-heading-hash {
        @apply [&:is(h1,h2,h3,h4)]:content-start;
        @apply [&:is(h1,h2,h3,h4)]:[grid-auto-columns:auto_1fr];
        @apply [&:is(h1,h2,h3,h4)>div:first-child]:[grid-area:1/2];
        @apply [&:is(h1,h2,h3,h4)>div:first-child]:ml-1;
    }
}

@layer utilities {
    /*  hide scroll bar but still scroll */
    .hide-scroll::-webkit-scrollbar {
        display: none;
    }
    .hide-scroll {
        scrollbar-width: none;
        -ms-overflow-style: none;
    }

    .linear-mask-gradient {
        mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1) 96px, rgba(0, 0, 0, 0));
    }
    .linear-mask-util {
        mask-image: linear-gradient(to bottom, white, white);
    }
    .grid-area-1-1 {
        grid-area: 1 / 1;
    }
    .gutter-stable {
        scrollbar-gutter: stable;
    }

    .triangle {
        position: relative;
        background-color: orange;
        text-align: left;
        transform: rotate(-60deg) skewX(-30deg) scale(1, 0.866);
    }
    .triangle:before,
    .triangle:after {
        content: "";
        position: absolute;
        background-color: inherit;
    }
    .triangle,
    .triangle:before,
    .triangle:after {
        width: inherit;
        height: inherit;
        border-top-right-radius: 30%;
    }

    .triangle:before {
        transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707) translate(0, -50%);
    }
    .triangle:after {
        transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);
    }

    .break-anywhere {
        word-break: break-word;
    }
    @supports (overflow-wrap: anywhere) {
        .break-anywhere {
            word-break: break-word;
            overflow-wrap: anywhere;
        }
    }

    .bg-gradient-primary {
        @apply bg-gradient-to-bl from-primary-4 to-tint-base to-60% bg-fixed;
    }
    .bg-gradient-tint {
        @apply bg-gradient-to-bl from-tint-4 to-tint-base to-60% bg-fixed;
    }

    /**
     * Utility to prevent horizontal jumps when the vertical scrollbar appears
     * It should be used on main containers of the layout, while preserving horizontal delimiters.
     * It basically adds a margin-left with the width of the scrollbar, and a width that compensates for it; when a scrollbar is displayed.
     * Inspired by https://aykevl.nl/2014/09/fix-jumping-scrollbar, but adapted to work on child elements of "html"
     */
    .scroll-nojump {
        width: 100%;
    }
    @media screen and (min-width: 1536px) {
        .scroll-nojump {
            margin-left: var(--scrollbar-width);
            margin-right: 0;
            width: calc(100% - var(--scrollbar-width));
        }
        body:has(.page-full-width) .scroll-nojump {
            margin-left: 0;
            width: 100%;
        }
    }
}

html {
    color-scheme: light;

    /** Ensure PDF export and print correctly displays the background colors */
    print-color-adjust: exact;
    -webkit-print-color-adjust: exact;
}
html.dark {
    color-scheme: dark light;
}

html.announcement-hidden .announcement-banner {
    @apply hidden;
}
