name: Deploy Production
on:
    push:
        branches:
            - main
jobs:
    deploy-v1-cloudflare:
        name: Deploy v1 to Cloudflare Pages
        runs-on: ubuntu-latest
        permissions:
            contents: read
            deployments: write
            issues: write
            pull-requests: write
            checks: write
            statuses: write
        outputs:
            deployment-url: ${{ steps.deploy.outputs.deployment-url }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Bun
              uses: ./.github/composite/setup-bun
            - name: Install dependencies
              run: bun install --frozen-lockfile
              env:
                  PUPPETEER_SKIP_DOWNLOAD: 1
            - name: Sets env vars for production
              run: |
                echo "SENTRY_ENVIRONMENT=production" >> $GITHUB_ENV
                echo "GITBOOK_ASSETS_PREFIX=https://static.gitbook.com" >> $GITHUB_ENV
            - name: Build Next.js with next-on-pages
              run: bun run turbo gitbook#build:cloudflare
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                  NEXT_SERVER_ACTIONS_ENCRYPTION_KEY: ${{ secrets.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY }}
                  SENTRY_ORG: ${{ vars.SENTRY_ORG }}
                  SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
                  SENTRY_DSN: ${{ vars.SENTRY_DSN }}
                  SENTRY_RELEASE: ${{ github.sha }}
            - id: deploy
              name: Deploy to Cloudflare
              uses: cloudflare/wrangler-action@v3.14.0
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  workingDirectory: ./
                  wranglerVersion: '3.82.0'
                  command: pages deploy ./packages/gitbook/.vercel/output/static --project-name=${{ vars.CLOUDFLARE_PROJECT_NAME }} --branch=main

    deploy-v2-vercel:
        name: Deploy v2 to Vercel
        runs-on: ubuntu-latest
        permissions:
            contents: read
            deployments: write
            issues: write
            pull-requests: write
            checks: write
            statuses: write
        outputs:
            deployment-url: ${{ steps.deploy.outputs.deployment-url }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Deploy staging
              id: deploy
              uses: ./.github/composite/deploy-vercel
              with:
                  environment: production
                  vercel-org: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project: ${{ secrets.VERCEL_PROJECT_ID }}
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
    deploy-v2-cloudflare:
        name: Deploy v2 to Cloudflare Worker
        runs-on: ubuntu-latest
        permissions:
            contents: read
            deployments: write
            issues: write
            pull-requests: write
            checks: write
            statuses: write
        outputs:
            deployment-url: ${{ steps.deploy.outputs.deployment-url }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Deploy
              id: deploy
              uses: ./.github/composite/deploy-cloudflare
              with:
                  environment: staging
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  NEXT_SERVER_ACTIONS_ENCRYPTION_KEY: ${{ secrets.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY }}
                  GITBOOK_URL: ${{ env.STAGING_2C_GITBOOK_URL }}
                  GITBOOK_IMAGE_RESIZE_SIGNING_KEY: ${{ secrets.STAGING_GITBOOK_IMAGE_RESIZE_SIGNING_KEY }}
                  GITBOOK_IMAGE_RESIZE_URL: ${{ env.GITBOOK_IMAGE_RESIZE_URL }}
                  GITBOOK_ICONS_URL: ${{ env.GITBOOK_ICONS_URL }}
                  GITBOOK_ICONS_TOKEN: ${{ env.GITBOOK_ICONS_TOKEN }}
                  GITBOOK_ASSETS_PREFIX: ${{ env.STAGING_2C_GITBOOK_ASSETS_PREFIX }}
            - name: Outputs
              run: |
                  echo "URL: ${{ steps.deploy.outputs.deployment-url }}"